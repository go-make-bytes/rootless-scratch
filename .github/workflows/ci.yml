name: CI

on:
  pull_request:
  push:
    branches: [main]
    tags: ['*']

    permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Lint Dockerfile
        if: github.event_name == 'pull_request'
        run: docker run --rm -v $(pwd):/work hadolint/hadolint:latest-alpine hadolint /work/Dockerfile

      - name: Set up Docker Buildx
        if: github.event_name == 'pull_request'
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (dry run)
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v5
        with:
          push: false
          load: true
          tags: test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Save image to tar
        if: github.event_name == 'pull_request'
        run: docker save test -o ${{ github.event.repository.name }}.tar

      - name: Image security check
        if: github.event_name == 'pull_request'
        run: |
          docker run --rm -v $(pwd):/work aquasec/trivy:latest image --exit-code 0 --severity UNKNOWN,LOW,MEDIUM --input /work/${{ github.event.repository.name }}.tar
          docker run --rm -v $(pwd):/work aquasec/trivy:latest image --exit-code 1 --severity HIGH,CRITICAL --input /work/${{ github.event.repository.name }}.tar

      - name: Login to GitHub Container Registry
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        if: github.event_name == 'push'
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Set image tags
        if: github.event_name == 'push'
        id: meta
        run: |
          if [ "${{ github.ref_type }}" == "tag" ]; then
            echo "tags=ghcr.io/${{ github.repository }}:latest,ghcr.io/${{ github.repository }}:${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            echo "tags=ghcr.io/${{ github.repository }}:latest" >> $GITHUB_OUTPUT
          fi

      - name: Build and push
        if: github.event_name == 'push'
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max